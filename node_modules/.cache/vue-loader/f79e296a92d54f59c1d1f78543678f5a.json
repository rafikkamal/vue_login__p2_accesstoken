{"remainingRequest":"/var/www/html/vue/vue_login/login/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/vue/vue_login/login/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/vue/vue_login/login/src/components/Login.vue","mtime":1570274370212},{"path":"/var/www/html/vue/vue_login/login/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/vue/vue_login/login/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/vue/vue_login/login/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/vue/vue_login/login/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n\tdata() {\n\t  return {\n\t    email: '',\n\t    password: ''\n\t  }\n\t},\n\tcomputed: {\n\t  ...mapState([\n\t    'loggingIn',\n\t    'loginError',\n\t    'loginSuccessful'\n\t  ])\n\t},\n\tmethods: {\n\t  ...mapActions([\n\t    'doLogin'\n\t  ]),\n\t  loginSubmit() {\n\t    this.doLogin({\n\t      email: this.email,\n\t      password: this.password\n\t    })\n\t  }\n\t}\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"login\">\n    <div v-if=\"loggingIn\" class=\"container-loading\">\n      <img src=\"/loading.gif\" alt=\"Loading Icon\">\n    </div>\n    <p v-if=\"loginError\">{{ loginError }}</p>\n    <p v-if=\"loginSuccessful\">Login Successful</p>\n    <form @submit.prevent=\"loginSubmit\">\n      <input type=\"email\" placeholder=\"E-Mail\" v-model=\"email\">\n      <input type=\"password\" placeholder=\"Password\" v-model=\"password\">\n      <button type=\"submit\">Login</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n\tdata() {\n\t  return {\n\t    email: '',\n\t    password: ''\n\t  }\n\t},\n\tcomputed: {\n\t  ...mapState([\n\t    'loggingIn',\n\t    'loginError',\n\t    'loginSuccessful'\n\t  ])\n\t},\n\tmethods: {\n\t  ...mapActions([\n\t    'doLogin'\n\t  ]),\n\t  loginSubmit() {\n\t    this.doLogin({\n\t      email: this.email,\n\t      password: this.password\n\t    })\n\t  }\n\t}\n}\n</script>\n<style scoped lang=\"scss\">\n  .login {\n    border: 1px solid black;\n    border-radius: 5px;\n    padding: 1.5rem;\n    width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    overflow: hidden;\n    .container-loading {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: rgba(0,0,0,.3);\n      img {\n        width: 2rem;\n        height: 2rem;\n      }\n    }\n    form {\n      display: flex;\n      flex-flow: column;\n      *:not(:last-child) {\n        margin-bottom: 1rem;\n      }\n      input {\n        padding: .5rem;\n      }\n      button {\n        padding: .5rem;\n        background-color: lightgray;\n        border: 1px solid gray;\n        border-radius: 3px;\n        cursor: pointer;\n        &:hover {\n          background-color: lightslategray;\n        }\n      }\n    }\n  }\n</style>"]}]}